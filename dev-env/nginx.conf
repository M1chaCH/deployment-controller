## IMPORTANT
# ALL server_names here must be represented in the /etc/hosts file
##
user www-data;
worker_processes  5;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
    multi_accept on;
}

http {
    ##
    # Basic Settings
    ##
    sendfile on;
    tcp_nopush on;
    types_hash_max_size 2048;

    include /etc/nginx/mime.types;
    default_type application/json;

    # SSL Settings
#     ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
#     ssl_prefer_server_ciphers on;

    # Logging Settings
    access_log /var/log/nginx/access.log;
    error_log  /var/log/nginx/error.log debug;

    # Gzip Settings
    gzip on;

    # https://nginx.org/en/docs/http/ngx_http_limit_conn_module.html
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    ## HOST Frontend
    server {
        listen 80;
        listen [::]:80;
        server_name host.michu-tech-dev.net;
        proxy_cookie_path ~*^/.* /;

        location / {
            # only x concurrent connections from the same IP
            limit_conn addr 12;

            auth_request /host/auth;
            auth_request_set $auth_status $upstream_status;
            auth_request_set $new_auth_cookie $sent_http_set_cookie;
            add_header Set-Cookie $new_auth_cookie;
            add_header X-Frame-Options deny;

            # This must be a proxy pass, because if not, an internal redirect to index.html will be done and this triggers an additional auth_request.
            proxy_pass http://docker.for.mac.localhost:5173/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        location =/host/auth {
            internal;
            proxy_pass http://docker.for.mac.localhost:8080/auth/host;
            proxy_no_cache true;

            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header Host $host;
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    ## HOST Backend
    server {
        listen 80;
        listen [::]:80;
        server_name host.backend.michu-tech-dev.net;

        location / {
            proxy_pass http://docker.for.mac.localhost:8080/;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    ## ROOT
    server {
        listen 80;
        listen [::]:80;
        server_name michu-tech-dev.net;

        location / {
            return 301 http://www.michu-tech-dev.com$request_uri;
        }
    }

    server {
        listen 80;
        listen [::]:80;
        server_name www.michu-tech-dev.net;
        proxy_cookie_path ~*^/.* /;

        location / {
            # only x concurrent connections from the same IP
            limit_conn addr 12;

            auth_request /host/auth;
            auth_request_set $auth_status $upstream_status;
            auth_request_set $new_auth_cookie $sent_http_set_cookie;
            add_header Set-Cookie $new_auth_cookie;
            add_header X-Frame-Options deny;

            error_page 401 403 500 501 503 = /host/error;

            # This must be a proxy pass, because if not, an internal redirect to index.html will be done and this triggers an additional auth_request.
            proxy_pass http://localhost:81/;
        }

        location =/host/auth {
            internal;
            proxy_pass http://docker.for.mac.localhost:8080/auth/portfolio;
            proxy_no_cache true;

            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header Host $host;
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location =/host/error {
            return 302 http://host.michu-tech-dev.net/login/#login?origin=michu-tech-dev.net;
        }
    }

    ## Room Automation
    server {
        listen 80;
        listen [::]:80;
        server_name room-automation.michu-tech-dev.net;
        proxy_cookie_path ~*^/.* /;

        location / {
            # only x concurrent connections from the same IP
            limit_conn addr 12;

            auth_request /host/auth;
            auth_request_set $auth_status $upstream_status;
            auth_request_set $new_auth_cookie $sent_http_set_cookie;
            add_header Set-Cookie $new_auth_cookie;
            add_header X-Frame-Options deny;

            error_page 401 403 500 501 503 = /host/error;

            # This must be a proxy pass, because if not, an internal redirect to index.html will be done and this triggers an additional auth_request.
            proxy_pass http://localhost:82/;
        }

        location =/host/auth {
            internal;
            proxy_pass http://docker.for.mac.localhost:8080/auth/room-automation;
            proxy_no_cache true;

            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header Host $host;
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location =/host/error {
            # use $auth_status to get the response code from the auth request
            return 302 http://host.michu-tech-dev.net/login/#login?origin=room-automation.michu-tech-dev.net;
        }
    }

    ## TeachU
    server {
        listen 80;
        listen [::]:80;
        server_name teachu.michu-tech-dev.net;
        proxy_cookie_path ~*^/.* /;

        location / {
            # only x concurrent connections from the same IP
            limit_conn addr 12;

            auth_request /host/auth;
            auth_request_set $auth_status $upstream_status;
            auth_request_set $new_auth_cookie $sent_http_set_cookie;
            add_header Set-Cookie $new_auth_cookie;
            add_header X-Frame-Options deny;

            error_page 401 403 500 501 503 = /host/error;

            # This must be a proxy pass, because if not, an internal redirect to index.html will be done and this triggers an additional auth_request.
            proxy_pass http://localhost:83/;
        }

        location =/host/auth {
            internal;
            proxy_pass http://docker.for.mac.localhost:8080/auth/teachu;
            proxy_no_cache true;

            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header Host $host;
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location =/host/error {
            # use $auth_status to get the response code from the auth request
            return 302 http://host.michu-tech-dev.net/login/#login?origin=teachu.michu-tech-dev.net;
        }
    }

    ## Kibana
    server {
        listen 80;
        listen [::]:80;
        server_name kibana.michu-tech-dev.net;
        proxy_cookie_path ~*^/.* /;

        location / {
            # only x concurrent connections from the same IP
            limit_conn addr 12;

            proxy_pass http://docker.for.mac.localhost:5601/;
        }
    }

    server {
        listen 81;
        server_name internal.portfolio;

        root /usr/share/nginx/pages/portfolio/;

        location / {
            index index.html;
            try_files $uri $uri/ index.html =404;
        }
    }

    server {
        listen 82;
        server_name internal.room-automation;

        root /usr/share/nginx/pages/room-automation/;

        location / {
            index index.html;
            try_files $uri $uri/ index.html =404;
        }
    }

    server {
        listen 83;
        server_name internal.teachu;

        root /usr/share/nginx/pages/teachu/;

        location / {
            index index.html;
            try_files $uri $uri/ index.html =404;
        }
    }

    server {
        listen 84;
        server_name internal.host;

        location / {
            proxy_pass http://docker.for.mac.localhost:5173/;
        }
    }
}

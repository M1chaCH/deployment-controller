user www-data;
worker_processes  auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
    multi_accept on;
}

http {
    ##
    # Basic Settings
    ##
    sendfile on;
    tcp_nopush on;
    types_hash_max_size 2048;

    include /etc/nginx/mime.types;
    default_type application/json;

    # SSL Settings
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;

    # Logging Settings
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Gzip Settings
    gzip on;

    # https://nginx.org/en/docs/http/ngx_http_limit_conn_module.html
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # redirect http
    server {
        listen 0.0.0.0:80;
        return 301 https://$host$request_uri;
    }

    # health check from elastic agent
    server {
        listen 127.0.0.1:8080;

        location /nginx_status {
            stub_status;
            allow 127.0.0.1;
            deny all;
        }
    }

    ## HOST Frontend
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        ssl_certificate /etc/letsencrypt/live/michu-tech.com/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/michu-tech.com/privkey.pem; # managed by Certbot

        server_name host.michu-tech.com;
        proxy_cookie_path ~*^/.* /;

        location / {
            # only x concurrent connections from the same IP
            limit_conn addr 12;

            auth_request /host/auth;
            auth_request_set $auth_status $upstream_status;
            auth_request_set $new_auth_cookie $sent_http_set_cookie;
            add_header Set-Cookie $new_auth_cookie;
            add_header X-Frame-Options deny;

            # This must be a proxy pass, because if not, an internal redirect to index.html will be done and this triggers an additional auth_request.
            proxy_pass http://localhost:81/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        location =/host/auth {
            internal;
            proxy_pass http://localhost:8181/auth/host;
            proxy_no_cache true;

            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header Host $host;
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header X-Original-Method $request_method;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        error_page 400 401 402 403 404 500 502 503 504 /nginx_error;
        location /nginx_error {
            internal;
            return 307 /nginx_error_page?code=$status;
        }

        location /nginx_error_page {
            root /usr/share/nginx/error-page;
            try_files /error.html /index.html =500;
        }

        ## HOST Backend
        location /backend/ {
            proxy_pass http://localhost:8181/;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header X-Original-Method $request_method;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    ## ROOT
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        ssl_certificate /etc/letsencrypt/live/michu-tech.com/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/michu-tech.com/privkey.pem; # managed by Certbot

        server_name michu-tech.com www.michu-tech.com portfolio.michu-tech.com;

        proxy_cookie_path ~*^/.* /;

        location / {
            # only x concurrent connections from the same IP
            limit_conn addr 12;

            auth_request /host/auth;
            auth_request_set $auth_status $upstream_status;
            auth_request_set $new_auth_cookie $sent_http_set_cookie;
            add_header Set-Cookie $new_auth_cookie;
            add_header X-Frame-Options deny;

            error_page 401 403 /host/error;
            error_page 404 /nginx_error;

            # This must be a proxy pass, because if not, an internal redirect to index.html will be done and this triggers an additional auth_request.
            proxy_pass http://localhost:82/;
        }

        location =/host/auth {
            internal;
            proxy_pass http://localhost:8181/auth/root;
            proxy_no_cache true;

            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header Host $host;
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header X-Original-Method $request_method;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location =/host/error {
            return 302 https://michu-tech.com/login?origin=www.michu-tech.com#login;
        }

        error_page 400 402 500 502 503 504 /nginx_error;
        location /nginx_error {
            internal;
            return 307 https://host.michu-tech.com/nginx_error_page?code=$status;
        }

        ## Old Daily Prayer Editor
        location /apps/daily-prayer-editor/ {
            return 301 https://dp-editor.michu-tech.com;
        }
    }

    ## Daily Prayer Editor
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        ssl_certificate /etc/letsencrypt/live/michu-tech.com/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/michu-tech.com/privkey.pem; # managed by Certbot

        server_name dp-editor.michu-tech.com;
        proxy_cookie_path ~*^/.* /;

        location / {
            # only x concurrent connections from the same IP
            limit_conn addr 12;

            auth_request /host/auth;
            auth_request_set $auth_status $upstream_status;
            auth_request_set $new_auth_cookie $sent_http_set_cookie;
            add_header Set-Cookie $new_auth_cookie;
            add_header X-Frame-Options deny;

            error_page 401 403 = /host/error;

            # This must be a proxy pass, because if not, an internal redirect to index.html will be done and this triggers an additional auth_request.
            proxy_pass http://localhost:83;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        location =/host/auth {
            internal;
            proxy_pass http://localhost:8181/auth/daily-prayer-editor;
            proxy_no_cache true;

            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header Host $host;
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header X-Original-Method $request_method;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location =/host/error {
            # use $auth_status to get the response code from the auth request
            return 302 https://host.michu-tech.com/login?origin=dp-editor.michu-tech.com#login;
        }

        error_page 400 402 404 500 502 503 504 /nginx_error;
        location /nginx_error {
            internal;
            return 307 http://host.michu-tech.com/nginx_error_page?code=$status;
        }
    }

    ## Room Automation
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        ssl_certificate /etc/letsencrypt/live/michu-tech.com/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/michu-tech.com/privkey.pem; # managed by Certbot

        server_name room-automation.michu-tech.com;
        proxy_cookie_path ~*^/.* /;

        location / {
            # only x concurrent connections from the same IP
            limit_conn addr 12;

            auth_request /host/auth;
            auth_request_set $auth_status $upstream_status;
            auth_request_set $new_auth_cookie $sent_http_set_cookie;
            add_header Set-Cookie $new_auth_cookie;
            add_header X-Frame-Options deny;
            add_header X-Robots-Tag noindex;

            error_page 401 403 = /host/error;

            # This must be a proxy pass, because if not, an internal redirect to index.html will be done and this triggers an additional auth_request.
            proxy_pass http://localhost:4200/room-automation/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # secure Websocket connections for RoomAutomation
        location /api/websocket/ {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_connect_timeout 600s;
            proxy_send_timeout 600s;
            proxy_read_timeout 600s;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            add_header X-Robots-Tag noindex;

            auth_request /host/auth;
            auth_request_set $auth_status $upstream_status;
            auth_request_set $new_auth_cookie $sent_http_set_cookie;
            add_header Set-Cookie $new_auth_cookie;
            add_header X-Frame-Options deny;

            error_page 401 403 = /host/error;

            proxy_pass http://localhost:4200/room-automation/api/websocket/;
        }

        location =/host/auth {
            internal;
            proxy_pass http://localhost:8181/auth/room-automation;
            proxy_no_cache true;

            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header Host $host;
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header X-Original-Method $request_method;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location =/host/error {
            # use $auth_status to get the response code from the auth request
            return 302 https://host.michu-tech.com/login?origin=room-automation.michu-tech.com#login;
        }

        error_page 400 402 404 500 502 503 504 /nginx_error;
        location /nginx_error {
            internal;
            return 307 http://host.michu-tech.com/nginx_error_page?code=$status;
        }
    }

    ## SiSu (Geburtstag)
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        ssl_certificate /etc/letsencrypt/live/michu-tech.com/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/michu-tech.com/privkey.pem; # managed by Certbot

        server_name sisu.michu-tech.com;
        proxy_cookie_path ~*^/.* /;

        location / {
            # only x concurrent connections from the same IP
            limit_conn addr 12;

            auth_request /host/auth;
            auth_request_set $auth_status $upstream_status;
            auth_request_set $new_auth_cookie $sent_http_set_cookie;
            add_header Set-Cookie $new_auth_cookie;
            add_header X-Frame-Options deny;
            add_header X-Robots-Tag noindex;

            error_page 401 403 = /host/error;

            # This must be a proxy pass, because if not, an internal redirect to index.html will be done and this triggers an additional auth_request.
            proxy_pass http://localhost:88/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        location =/host/auth {
            internal;
            proxy_pass http://localhost:8181/auth/sisu;
            proxy_no_cache true;

            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header Host $host;
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header X-Original-Method $request_method;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location =/host/error {
            # use $auth_status to get the response code from the auth request
            return 302 https://host.michu-tech.com/login?origin=sisu.michu-tech.com#login;
        }

        error_page 400 402 404 500 502 503 504 /nginx_error;
        location /nginx_error {
            internal;
            return 307 http://host.michu-tech.com/nginx_error_page?code=$status;
        }
    }

    ## Kibana
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        ssl_certificate /etc/letsencrypt/live/michu-tech.com/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/michu-tech.com/privkey.pem; # managed by Certbot

        server_name kibana.michu-tech.com;
        proxy_cookie_path ~*^/.* /;

        location / {
            # only x concurrent connections from the same IP
            limit_conn addr 12;

            auth_request /host/auth;
            auth_request_set $auth_status $upstream_status;
            auth_request_set $new_auth_cookie $sent_http_set_cookie;
            add_header Set-Cookie $new_auth_cookie;
            add_header X-Frame-Options deny;

            error_page 401 403 = /host/error;

            # This must be a proxy pass, because if not, an internal redirect to index.html will be done and this triggers an additional auth_request.
            proxy_pass http://michus-obs-env:5601;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        location =/host/auth {
            internal;
            proxy_pass http://localhost:8181/auth/kibana;
            proxy_no_cache true;

            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header Host $host;
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header X-Original-Method $request_method;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location =/host/error {
            # use $auth_status to get the response code from the auth request
            return 302 https://host.michu-tech.com/login?origin=kibana.michu-tech.com#login;
        }

        error_page 400 402 404 500 502 503 504 /nginx_error;
        location /nginx_error {
            internal;
            return 307 http://host.michu-tech.com/nginx_error_page?code=$status;
        }
    }

    ## TeachU
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        ssl_certificate /etc/letsencrypt/live/michu-tech.com/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/michu-tech.com/privkey.pem; # managed by Certbot

        server_name teachu.michu-tech.com;
        proxy_cookie_path ~*^/.* /;

        location / {
            # only x concurrent connections from the same IP
            limit_conn addr 12;

            auth_request /host/auth;
            auth_request_set $auth_status $upstream_status;
            auth_request_set $new_auth_cookie $sent_http_set_cookie;
            add_header Set-Cookie $new_auth_cookie;
            add_header X-Frame-Options deny;

            error_page 401 403 = /host/error;

            # This must be a proxy pass, because if not, an internal redirect to index.html will be done and this triggers an additional auth_request.
            proxy_pass http://localhost:4201/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        location =/host/auth {
            internal;
            proxy_pass http://localhost:8181/auth/teachu;
            proxy_no_cache true;

            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header Host $host;
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header X-Original-Method $request_method;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location =/host/error {
            # use $auth_status to get the response code from the auth request
            return 302 https://host.michu-tech.com/login?origin=teachu.michu-tech.com#login;
        }

        error_page 400 402 404 500 502 503 504 /nginx_error;
        location /nginx_error {
            internal;
            return 307 http://host.michu-tech.com/nginx_error_page?code=$status;
        }
    }

    ## Daily Prayer reader
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        ssl_certificate /etc/letsencrypt/live/michu-tech.com/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/michu-tech.com/privkey.pem; # managed by Certbot

        server_name daily-prayer.michu-tech.com;
        proxy_cookie_path ~*^/.* /;

        location / {
            # only x concurrent connections from the same IP
            limit_conn addr 12;

            auth_request /host/auth;
            auth_request_set $auth_status $upstream_status;
            auth_request_set $new_auth_cookie $sent_http_set_cookie;
            add_header Set-Cookie $new_auth_cookie;
            add_header X-Frame-Options deny;

            error_page 401 403 = /host/error;

            # This must be a proxy pass, because if not, an internal redirect to index.html will be done and this triggers an additional auth_request.
            proxy_pass http://localhost:84/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        location =/host/auth {
            internal;
            proxy_pass http://localhost:8181/auth/daily-prayer;
            proxy_no_cache true;

            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header Host $host;
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header X-Original-Method $request_method;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location =/host/error {
            # use $auth_status to get the response code from the auth request
            return 302 https://host.michu-tech.com/login?origin=daily-prayer.michu-tech.com#login;
        }

        error_page 400 402 404 500 502 503 504 /nginx_error;
        location /nginx_error {
            internal;
            return 307 http://host.michu-tech.com/nginx_error_page?code=$status;
        }
    }

    # virtual server for the host frontend proxy
    server {
        listen 81;
        server_name internal.host.frontend;

        root /usr/share/nginx/html/;

        location / {
            index index.html;
            try_files $uri $uri/ /index.html =404;
        }

        error_page 400 402 404 500 502 503 504 /nginx_error;
        location /nginx_error {
            internal;
            return 307 https://host.michu-tech.com/nginx_error_page?code=$status;
        }
    }

    # virtual server for portfolio proxy
    server {
        listen 82;
        server_name internal.portfolio;

        root /home/dever/portfolio;

        location / {
            index index.html;
            try_files $uri $uri/ /index.html =404;
        }

        error_page 400 402 404 500 502 503 504 /nginx_error;
        location /nginx_error {
            internal;
            return 307 https://host.michu-tech.com/nginx_error_page?code=$status;
        }
    }

    # virtual server for daily prayer editor proxy
    server {
        listen 83;
        server_name internal.daily.prayer.editor;

        root /home/dever/daily-prayer-editor;

        location / {
            index index.html;
            try_files $uri $uri/ /index.html =404;
        }

        error_page 400 402 404 500 502 503 504 /nginx_error;
        location /nginx_error {
            internal;
            return 307 https://host.michu-tech.com/nginx_error_page?code=$status;
        }
    }

    # virtual server for daily prayer web app proxy
    server {
        listen 84;
        server_name internal.daily.prayer.web.app;

        root /home/dever/daily-prayer-web-app;

        location / {
            index index.html;
            try_files $uri $uri/ /index.html =404;
        }

        error_page 400 402 404 500 502 503 504 /nginx_error;
        location /nginx_error {
            internal;
            return 307 https://host.michu-tech.com/nginx_error_page?code=$status;
        }
    }
}
